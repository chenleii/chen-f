<?xml version="1.0" encoding="UTF-8"?>
<Configuration status="WARN" monitorInterval="0">

    <Properties>
        <!-- 日志文件输出目录 -->
        <Property name="log_file_output_directory" value="${sys:user.home}/logs/chen"/>
        <!-- 有颜色样式的,有本地类位置的模式 -->
        <Property name="style_location_pattern"
                  value="%date{yyyy-MM-dd HH:mm:ss} %highlight{%-5level}{ERROR=Red} %style{%-5pid}{Magenta} -- [%15.15thread] %style{%-70.70location}{Cyan} : %message%n%xThrowable"/>
        <!-- 有颜色样式的,日志名称的模式 -->
        <Property name="style_logger_pattern"
                  value="%date{yyyy-MM-dd HH:mm:ss} %highlight{%-5level}{ERROR=Red} %style{%-5pid}{Magenta} -- [%15.15thread] %style{%-39.39logger{1.}}{Cyan} : %message%n%xThrowable"/>
        <!-- 没有颜色样式的,有本地类位置的模式 -->
        <Property name="location_pattern"
                  value="%date{yyyy-MM-dd HH:mm:ss}%-5level %-5pid -- [%15.15thread] %-50.50location : %message%n%xThrowable"/>
        <!-- 没有颜色样式的,日志名称的模式 -->
        <Property name="logger_pattern"
                  value="%date{yyyy-MM-dd HH:mm:ss} %-5level %-5pid -- [%15.15thread] %-39.39logger{1.} : %message%n%xThrowable"/>
    </Properties>

    <Appenders>
        <!--  输出控制台的配置 -->
        <Console name="console" target="SYSTEM_OUT">
            <!--  控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch） -->
            <ThresholdFilter level="ALL" onMatch="ACCEPT" onMismatch="DENY"/>
            <!--  输出日志的格式 -->
            <PatternLayout disableAnsi="false" pattern="${style_logger_pattern}"/>
        </Console>

        <!--配置自定义日志，按天输出-->
        <RollingFile name="root-file" fileName="${log_file_output_directory}/root.log"
                     filePattern="${log_file_output_directory}/root/root-%d{yyyy-MM-dd-HH}-%i.log"
                     append="true">
            <PatternLayout pattern="${logger_pattern}"/>
            <Policies>
                <!--设置每天打包日志一次-->
                <!--单位:以日志的命名精度来确定单位，比如yyyy-MM-dd-HH 单位为小时，yyyy-MM-dd-HH-mm 单位为分钟。-->
                <TimeBasedTriggeringPolicy interval="1" modulate="true"/>
                <!--设置日志大小达到一定大小后打包生成压缩文件-->
                <SizeBasedTriggeringPolicy size="100 MB"/>
            </Policies>
            <!-- 单位时间内最多分隔文件个数 -->
            <DefaultRolloverStrategy compressionLevel="0" max="100"/>
        </RollingFile>

        <!-- 每天的error日志  -->
        <RollingFile name="error-file" fileName="${log_file_output_directory}/error.log"
                     filePattern="${log_file_output_directory}/error/error-%d{yyyy-MM-dd-HH}-%i.log"
                     append="true">
            <ThresholdFilter level="ERROR" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="${location_pattern}"/>
            <Policies>
                <!--单位:以日志的命名精度来确定单位，比如yyyy-MM-dd-HH 单位为小时，yyyy-MM-dd-HH-mm 单位为分钟。-->
                <TimeBasedTriggeringPolicy interval="1" modulate="true"/>
                <!--设置日志大小达到一定大小后打包生成压缩文件-->
                <SizeBasedTriggeringPolicy size="100 MB"/>
            </Policies>
            <!-- 单位时间内最多分隔文件个数 -->
            <DefaultRolloverStrategy compressionLevel="0" max="100"/>
        </RollingFile>

        <!--druid的日志记录追加器-->
        <RollingFile name="druid-file" fileName="${log_file_output_directory}/druid-sql.log"
                     filePattern="${log_file_output_directory}/druid/druid-sql-%d{yyyy-MM-dd-HH}-%i.log"
                     append="true">
            <PatternLayout pattern="${location_pattern}"/>
            <Policies>
                <!--单位:以日志的命名精度来确定单位，比如yyyy-MM-dd-HH 单位为小时，yyyy-MM-dd-HH-mm 单位为分钟。-->
                <TimeBasedTriggeringPolicy interval="1" modulate="true"/>
                <!--设置日志大小达到一定大小后打包生成压缩文件-->
                <SizeBasedTriggeringPolicy size="100 MB"/>
            </Policies>
            <!-- 单位时间内最多分隔文件个数 -->
            <DefaultRolloverStrategy compressionLevel="0" max="100"/>
        </RollingFile>

    </Appenders>

    <Loggers>
        <Root level="DEBUG" includeLocation="false">
            <AppenderRef ref="console" level="DEBUG"/>
            <AppenderRef ref="root-file" level="DEBUG"/>
            <AppenderRef ref="error-file" level="ERROR"/>
            <AppenderRef ref="mail" level="ERROR"/>
        </Root>

        <!--记录druid-sql的记录-->
        <Logger name="druid.sql.Statement" level="DEBUG" additivity="false">
            <AppenderRef ref="druid-file"/>
        </Logger>

        <!--过滤掉框架的日志-->
        <!--<Logger name="org.springframework" level="WARN" additivity="true"/>-->
        <!--<Logger name="org.mybatis" level="WARN" additivity="true"/>-->
        <Logger name="org.quartz" level="WARN" additivity="true"/>
        <Logger name="io.lettuce" level="WARN" additivity="true"/>
    </Loggers>
</Configuration>